== POST

Here is the function to register a HTTP `POST` handler:

[source, haskell]
----
include::{coreSrc}/chinook/Chinook.fr[tags=postFunction]
----

It basically works the same way `GET` did. The main difference
is that in `POST` calls you would like to do something with the
body text sent from the client.

Most of the times that body could be a `JSON`/`XML` payload. You
can get that information with the `body` field from the request.

Here's an example building a new `Lang` instance out of the json
payload coming from the client:

[source, haskell]
----
include::{sampleSrc}/chinook/Handlers.fr[tags=postJSONHandler]
----

<1> Successful response sending a `201` (created) status response
<2> Failure response sending a `400` (bad request) in case the payload
wasn't correct.

Of course it would be nice to send back more feedback about validation ;)
